import { OptionModel } from '@/models/option'
import headerCategories from './data/categories'
const headerMenu = [
  {
    name: 'N√≥ng',
    path: '/',
  },
  {
    name: 'M·ªõi',
    path: '/tin-moi',
  },
  {
    name: 'Ch·ªß ƒë·ªÅ',
    path: '/chu-de',
  },
] as const
const headerTag = [
  {
    name: 'Ph√≤ng ch·ªëng d·ªãch covid',
    path: '/',
  },
  {
    name: 'NƒÉng l∆∞·ª£ng t√≠ch c·ª±c',
    path: '/',
  },
  {
    name: 'Kh√°m ph√° Vi·ªát Nam',
    path: '/',
  },
  {
    name: 'Kh√°m ph√° th·∫ø gi·ªõi',
    path: '/',
  },
] as const
export async function run() {
  try {
    console.log('üîÉStar seeding options...')
    const headerMenuOption = await OptionModel.findOneAndUpdate(
      {
        name: 'header.menu',
      },
      {
        value: JSON.stringify(headerMenu),
      },
      {
        new: true,
        upsert: true,
      }
    )
    if (!!headerMenuOption) console.log('    ‚úÖSeeding header menu success')
    const headerTagOption = await OptionModel.findOneAndUpdate(
      {
        name: 'header.tag',
      },
      {
        value: JSON.stringify(headerTag),
      },
      {
        new: true,
        upsert: true,
      }
    )
    if (!!headerTagOption) console.log('    ‚úÖSeeding header tag success')
    const headerCategoriesOption = await OptionModel.findOneAndUpdate(
      {
        name: 'header.category',
      },
      {
        value: JSON.stringify(headerCategories),
      },
      {
        new: true,
        upsert: true,
      }
    )
    if (!!headerCategoriesOption) console.log('    ‚úÖSeeding header categories success')
    const channelLastestOption = await OptionModel.findOneAndUpdate(
      {
        name: 'channel.lastest',
      },
      {
        value: '61ecf85b0067100d8177dd6d',
      },
      {
        new: true,
        upsert: true,
      }
    )
    if (!!channelLastestOption) console.log('    ‚úÖSeeding channel lastest success')
    console.log('‚úÖSeeding options success')
  } catch (error: any) {
    console.log('‚ùåSeeding options failed: ' + error.message)
  }
}
