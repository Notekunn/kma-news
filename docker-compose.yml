version: '3.4'

services:
    backend:
        image: backend
        build:
            context: backend
            dockerfile: ./Dockerfile
            target: base
        environment:
            NODE_ENV: development
            PORT: 9999
            DATABASE_URL: mongodb://admin:admin@db:27017/app?authSource=admin
            SECRET: secret_for_token,
            REFRESH_SECRET: secret_for_refresh_token
        depends_on:
            - db
        expose:
            - 9999
        volumes:
            - ./backend/src:/home/node/app/src
        ports:
            - 9999:9999
            - 9229:9229
        networks:
            - app-network
        command: [ "yarn", "start" ]
    db:
        image: mongo
        environment:
            - MONGO_INITDB_DATABASE=app
            - MONGO_INITDB_ROOT_USERNAME=admin
            - MONGO_INITDB_ROOT_PASSWORD=admin
        volumes:
            - appdata:/data/db
        ports:
            - 27017:27017
        restart: always
        networks:
            - app-network
    seed:
        image: backend:latest
        depends_on:
            - db
        command: [ "yarn", "seed" ]
        volumes:
            - ./backend/src:/home/node/app/src
        environment:
            DATABASE_URL: mongodb://admin:admin@db:27017/app?authSource=admin
        networks:
            - app-network
        profiles:
            - donotstart
    crontab:
        image: crontab
        depends_on:
            - db
            - cache
        build:
            context: crawler
            dockerfile: ./Dockerfile
            target: base
        environment:
            REDIS_PORT: 6379
        volumes:
            - ./crawler/src:/home/node/app/src
            - ./crawler/crontab:/etc/cron.d/crawl-cron
        command: [ "yarn", "dev" ]
        networks:
            - app-network
            - cache-network
    cache:
        image: redis:5-alpine
        volumes:
            - appcache:/data
        networks:
            - cache-network
            - app-network
        restart: unless-stopped
        ports:
            - 6379:6379

volumes:
    appdata: null
    appcache: null
networks:
    app-network:
        driver: bridge
    cache-network:
        driver: bridge
