version: '3.4'

services:
  backend:
    image: kma-news-backend
    container_name: kma-news-backend
    build:
      context: .
      dockerfile: Dockerfile
      target: product
    environment:
      NODE_ENV: development
      PORT: 8080
      DATABASE_URL: "mongodb://${DB_USERNAME}:${DB_PASSWORD}@db:27017/${DB_NAME}?auth\
        Source=admin"
      REDIS_URL: "redis://cache:6379"
      SECRET: secret_for_token
      REFRESH_SECRET: secret_for_refresh_token
      CACHE_TTL: 60
      ACCESS_TOKEN_TTL: 600
      REFRESH_TOKEN_TTL: 86400
      VIRTUAL_HOST: "${BACKEND_HOST}"
      LETSENCRYPT_HOST: "${BACKEND_HOST}"
      VIRTUAL_PORT: 8080

    depends_on:
      - db
    expose:
      - 8080
    ports:
      - "${BACKEND_PORT}:8080"
    networks:
      - db-network
      - redis-network
      - app-network
    command: yarn backend deploy

  frontend:
    image: kma-news-frontend
    container_name: kma-news-frontend
    build:
      context: .
      dockerfile: Dockerfile
      target: static_product
      args:
        BUILD_CONTEXT: frontend
        API_URL: "https://${BACKEND_HOST}"
    environment:
      REACT_APP_API_URL: "https://${BACKEND_HOST}"
      VIRTUAL_HOST: "${FRONTEND_HOST}"
      LETSENCRYPT_HOST: "${FRONTEND_HOST}"
      VIRTUAL_PORT: 80
    expose:
      - 80
    ports:
      - "${FRONTEND_PORT}:80"
    networks:
      - app-network
    command: [ "nginx", "-g", "daemon off;" ]

  admin:
    image: kma-news-admin
    container_name: kma-news-admin
    build:
      context: .
      dockerfile: Dockerfile
      target: static_product
      args:
        BUILD_CONTEXT: admin
        API_URL: "https://${BACKEND_HOST}"
    environment:
      REACT_APP_API_URL: "https://${BACKEND_HOST}"
      VIRTUAL_HOST: "${ADMIN_HOST}"
      LETSENCRYPT_HOST: "${ADMIN_HOST}"
      VIRTUAL_PORT: 80
    expose:
      - 80
    ports:
      - "${ADMIN_PORT}:80"
    networks:
      - app-network
    command: [ "nginx", "-g", "daemon off;" ]
  crawler:
    image: kma-news-crawler
    container_name: kma-news-crawler
    depends_on:
      - db
      - cache
    build:
      context: .
      dockerfile: Dockerfile
      target: product
      args:
        BUILD_CONTEXT: crawler
    environment:
      DATABASE_URL: "mongodb://${DB_USERNAME}:${DB_PASSWORD}@db:27017/${DB_NAME}?auth\
        Source=admin"
      REDIS_URL: "redis://cache:6379"
      PORT: 5000
    ports:
      - ${CRAWLER_PORT}:5000
    networks:
      - db-network
      - redis-network
    command: yarn crawler deploy
